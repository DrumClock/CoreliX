[gcode_macro DUMP]
description: Debug: Print entries of the printer object.
gcode:
  {% set out = [] %}
  
  {% if params.SHOW !='all' %} 
    {% set reject = ['configfile','gcode_macro','bed_mesh','gcode','mcu','save_variables'] %}
  {% else %} 
    {% set reject = ['configfile','gcode_macro','gcode','save_variables'] %}
  {% endif %} 
    
  {% for object in printer|sort %}
   {% set ns = namespace(detect=true) %} 
      
     {% for test in reject|sort %}
       {% if test in object %}{% set ns.detect =false %}{% endif %}    
     {% endfor %}    
 
   {% if ns.detect %}
    {% for parameter, value in printer[object].items()|sort %}
     {% set _dummy = out.append("printer['%s'].%s = %s" % (object, parameter, value)) %}
    {% endfor %} 
   {% endif %}    
   
  {% endfor %}
     
  {% if out|length == 0 %}{% set _dummy = out.append("Nothing found for \"DUMP_PRINTER_PARAM %s\"" % rawparams) %}{% endif %}
  {action_respond_info(out|join("\n"))}
  
########################  

[gcode_macro TEST_XY]
gcode:

 {% if "xy" not in printer.toolhead.homed_axes %}
   G28
 {% endif %} 

  G1 X10 Y10 F36000
  G1 X260 Y290

  G1 X10 
  G1 Y10
  G1 X260
  G1 Y290

  G1 X10 Y10
  G1 X260 Y290

  G1 X10 
  G1 Y10
  G1 X260
  G1 Y290

  G1 X135 Y150
  
#-------------------------------------------------------------

[gcode_macro TEST_STEPPER_Z]
gcode:

  STEPPER_BUZZ STEPPER=stepper_z
  STEPPER_BUZZ STEPPER=stepper_z1
  STEPPER_BUZZ STEPPER=stepper_z2
  STEPPER_BUZZ STEPPER=stepper_z3

#-------------------------------------------------------------

[gcode_macro TEST_PROBE]
gcode:

# {% set type = ['probe','bltouch','smart_effector','probe_eddy_current'] %}
   
  ### check for offset probe in configfile 
#    {% set ns = namespace(probe=false) %}

#    {% for probe in type|sort %} ; check for all probe type
#      {% if probe in printer %}  
#        {% set ns.probe = probe %}
#	  {% endif %}
#    {% endfor %}
    
#  {% set probe_x_offset = (printer.configfile.config[ns.probe].x_offset)|int %}
#  {% set probe_y_offset = (printer.configfile.config[ns.probe].y_offset)|int %}
#  {action_respond_info("type = %s " % (ns.probe)) }
    
  ### check for offset probe in configfile   
  {% set probe_x_offset = (printer.configfile.config[printer['probe'].name].x_offset)|float %}
  {% set probe_y_offset = (printer.configfile.config[printer['probe'].name].y_offset)|float %}

   {% set msg = ("%s = offset - x%s y%s" % (printer['probe'].name, probe_x_offset, probe_y_offset)) %}
      RESPOND MSG='{msg}'


 
                      
  